// https://d3-geomap.github.io v3.3.0 Copyright 2020 Ramiro GÃ³mez
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("d3-selection"),require("d3-transition"),require("topojson"),require("d3-fetch"),require("d3-geo"),require("d3-array"),require("d3-scale"),require("d3-format")):"function"==typeof define&&define.amd?define(["exports","d3-selection","d3-transition","topojson","d3-fetch","d3-geo","d3-array","d3-scale","d3-format"],e):e((t=t||self).d3=t.d3||{},t.d3,t.d3,t.topojson,t.d3,t.d3,t.d3,t.d3,t.d3)}(this,function(t,e,r,i,o,s,p,a,n){"use strict";function l(t,e,r){t[e]=(i=>void 0===i?t.properties[e]||r:(t.properties[e]=i,t))}class d{constructor(){this.properties={geofile:null,geoData:null,height:null,postUpdate:null,projection:s.geoNaturalEarth1,rotate:[0,0,0],scale:null,translate:null,unitId:"iso3",unitPrefix:"unit-",units:"units",unitTitle:t=>t.properties.name,width:null,zoomFactor:4};for(let t in this.properties)l(this,t,this.properties[t]);this._={}}clicked(t){let e=1,r=this.properties.width/2,i=this.properties.height/2,o=r,s=i;if(t&&t.hasOwnProperty("geometry")&&this._.centered!==t){let r=this.path.centroid(t);o=r[0],s=r[1],e=this.properties.zoomFactor,this._.centered=t}else this._.centered=null;this.svg.selectAll("path.unit").classed("active",this._.centered&&(t=>t===this._.centered)),this.svg.selectAll("g.zoom").transition().duration(750).attr("transform",`translate(${r}, ${i})scale(${e})translate(-${o}, -${s})`)}draw(t){let e=this;e.data=t.datum(),e.properties.width||(e.properties.width=t.node().getBoundingClientRect().width),e.properties.height||(e.properties.height=e.properties.width/1.92),e.properties.scale||(e.properties.scale=e.properties.width/5.4),e.properties.translate||(e.properties.translate=[e.properties.width/2,e.properties.height/2]),e.svg=t.append("svg").attr("width",e.properties.width).attr("height",e.properties.height),e.svg.append("rect").attr("class","background").attr("width",e.properties.width).attr("height",e.properties.height).on("click",e.clicked.bind(e));let r=e.properties.projection().scale(e.properties.scale).translate(e.properties.translate).precision(.1);r.hasOwnProperty("rotate")&&e.properties.rotate&&r.rotate(e.properties.rotate),e.path=s.geoPath().projection(r);const p=t=>{e.geo=t,e.svg.append("g").attr("class","units zoom").selectAll("path").data(i.feature(t,t.objects[e.properties.units]).features).enter().append("path").attr("class",t=>"unit "+this.properties.unitPrefix+e.unitName(t.properties)).attr("d",e.path).on("click",e.clicked.bind(e)).append("title").text(e.properties.unitTitle),e.update()};Promise.resolve().then(()=>e.properties.geoData?e.properties.geoData:o.json(e.properties.geofile)).then(t=>p(t))}unitName(t){let e=t[this.properties.unitId];return void 0!==e?e.toString().trim().replace(/\s/g,"_"):""}update(){this.properties.postUpdate&&this.properties.postUpdate()}}const c=["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"];class h extends d{constructor(){super();let t={colors:h.DEFAULT_COLORS,column:null,domain:null,duration:null,format:n.format(",.02f"),legend:!1,valueScale:a.scaleQuantize};for(let e in t)this.properties[e]=t[e],l(this,e,t[e])}columnVal(t){return+t[this.properties.column]}defined(t){return!(isNaN(t)||void 0===t||""===t)}update(){let t=this;t.extent=p.extent(t.data,t.columnVal.bind(t)),t.colorScale=t.properties.valueScale().domain(t.properties.domain||t.extent).range(c),t.svg.selectAll("path.unit").style("fill",null),t.data.forEach(e=>{let r=t.unitName(e),i=e[t.properties.column].toString().trim(),o=t.svg.selectAll(`.${t.properties.unitPrefix}${r}`);if(!o.empty()&&t.defined(i)){let e=t.colorScale(i),r=t.properties.unitTitle(o.datum());t.properties.duration?o.transition().duration(t.properties.duration).style("fill",e):o.style("fill",e),i=t.properties.format(i),o.select("title").text(`${r}\n\n${t.properties.column}: ${i}`)}}),t.properties.legend&&t.drawLegend(t.properties.legend),super.update()}drawLegend(t=null){let e,r,i=this,o=c.length;!0===t?(e=i.properties.width/10,r=i.properties.height/3):(e=t.width,r=t.height);const s=e/7.5,p=r-r/5.4,a=s/2,n=i.properties.height-r,l="translate("+a+","+3*a+")";i.svg.select("g.legend").remove();const d=c.slice().reverse(),h=p/o,u=3/h;let g=i.svg.append("g").attr("class","legend").attr("width",e).attr("height",r).attr("transform","translate(0,"+n+")");g.append("rect").style("fill","#fff").attr("class","legend-bg").attr("width",e).attr("height",r),g.append("rect").attr("class","legend-bar").attr("width",s).attr("height",p).attr("transform",l);let f=g.append("g").attr("transform",l);f.selectAll("rect").data(d).enter().append("rect").attr("y",(t,e)=>e*h).attr("fill",(t,e)=>d[e]).attr("width",s).attr("height",h);let m=i.extent[0],w=i.extent[1],x=!1,v=!1;i.properties.domain&&(i.properties.domain[1]<w&&(v=!0),w=i.properties.domain[1],i.properties.domain[0]>m&&(x=!0),m=i.properties.domain[0]),f.selectAll("text").data(d).enter().append("text").text((t,e)=>{if(e===o-1){let t=i.properties.format(m);return x&&(t=`< ${t}`),t}return i.properties.format(i.colorScale.invertExtent(t)[0])}).attr("class",(t,e)=>"text-"+e).attr("x",s+a).attr("y",(t,e)=>e*h+(h+h*u)),f.append("text").text(()=>{let t=i.properties.format(w);return v&&(t=`> ${t}`),t}).attr("x",s+a).attr("y",a*u*2)}}h.DEFAULT_COLORS=c,t.choropleth=function(){return new h},t.geomap=function(){return new d},Object.defineProperty(t,"__esModule",{value:!0})});
